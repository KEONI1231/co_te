# 리스트 초기화
a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print("-----리스트 초기화-----")
print(a)
# [1, 2, 3, 4, 5, 6, 7, 8, 9]
# 네 번째 원소만 출력
print(a[3])

# 크기가 N이고, 모든 값이 0인 1차원 리스트 초기화
n = 10
a = [0] * n
print(a)
# [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

# 뒤에서 첫 번째 원소 출력
print("\n----- 뒤에서 첫 번째 원소 출력 -----")
print(a[-1])
print("-----------------------------------------")
# 뒤에서 세 번째 원소 출력
print("\n----- 뒤에서 세 번째 원소 출력 -----")
print(a[-3])
print("-----------------------------------------")

"""
 리스트 인덱싱과 슬라이싱
 리스트에서 연속적인 위치를 갖는 원소들을 가져와야 할 때는 슬라이싱을 이용.
 대괄호 안에 콜론(:)을 넣어서 시작 인덱스와 끝 인덱스를 설정.
 끝 인덱스는 실제 인덱스보다 1을 더 크게 설정.
"""
print("\n----- 리스트 인덱싱과 슬라이싱-----")
a = [1,2,3,4,5,6,7,8,9]
print("-----------------------------------------")
# 두 번째 원소부터 네 번째 원소까지
print("\n----- 두 번째 원소부터 네 번재 원소까지 -----")
print(a[1 : 4])
print("-----------------------------------------")

print("\n----- 리스트 컴프리헨션 -----")
# 리스트 컴프리헨션
# 0부터 9까지의 수를 포함하는 리스트
print("1) 0부터 9까지의 수를 포함하는 리스트")
array = [i for i in range(10)]
print("  ",array)
print("2) 0부터 19까지의 수 중에서 홀수만 포함하는 리스트")
array = [i for i in range(20) if i % 2 == 1]
print("  ",array)
print("3) 1부터 9까지의 수들의 제곱 값을 포함하는 리스트")
array = [i*i for i in range(1, 10)]
print("  ", array)
print("----------------------------------------")

# 리스트 컴프리헨션 2차원
""" 
    N * M 크기의 2차원 리스트를 한 번에 초기화 해야 할 때 유용.
    EX) array = [[0] * m for _ in range(n)]
    ** 잘못된 예시 **
    array = [[0] * m] * n
    
"""
print("\n----- 2차원 리스트 컴프리헨션 -----")
n = 4
m = 3
array = [[0] * m for _ in range(n)]
# 세개씩 반복문 4개 반복 하겠다
print(array)
# 변수의 값을 무시하고자 할때 _ 사용.

